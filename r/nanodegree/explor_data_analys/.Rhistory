geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.7)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7) +
geom_density2d()
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d(aes(colour = factor(quality))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d(aes(colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d(aes(colour = factor(quality)))
?lm()
m1 <- lm(logprice ~ I(carat^(1/3)),
data = diamondsBigSample[diamondsBigSample$price < 10000] &
diamondsBigSample$cert == 'GIA')
m2 <- update(m1, ~ . + carat)
m3 <- update(m2, ~ . + cut)
m4 <- update(m3, ~ . + color)
m5 <- update(m4, ~ . + clarity)
mtable(m1, m2, m3, m4, m5)
lm(quality ~ alcohol, data = reds)
lm(quality ~ alcohol, data = reds)
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point()
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point() +
geom_smooth()
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point() +
stat_smooth()
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point() +
stat_smooth(method = 'lm')
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point()
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point(aes(colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
ggplot(reds, aes(x = volatile.acidity, y = factor(quality))) +
geom_point(aes(colour = factor(quality)))
ggplot(reds, aes(x = volatile.acidity, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
ggplot(reds, aes(x = sulphates, y = factor(quality))) +
geom_point(aes(colour = factor(quality)))
ggplot(reds, aes(x = sulphates, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
ggplot(reds, aes(x = sulphates, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth()
ggplot(reds, aes(x = sulphates, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = 'lm', formula = quality ~ sulphates)
ggplot(reds, aes(x = sulphates, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = 'lm', formula = y ~ x)
ggplot(reds, aes(x = sulphates, y = quality)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = 'lm', formula = y ~ x)
ggplot(reds, aes(x = sulphates, y = quality)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = 'lm', formula = y ~ x, aes(colour = factor(quality)))
ggplot(reds, aes(x = sulphates, y = quality)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = 'lm', formula = y ~ x, aes(fill = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = 'lm', formula = y ~ x, aes(fill = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = lm, formula = y ~ x, aes(fill = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = lm, formula = y ~ x, aes(fill = factor(quality), colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
geom_jitter() +
stat_smooth(method = lm, formula = y ~ x, aes(fill = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, formula = y ~ x, aes(fill = factor(quality))) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_smooth(method = lm) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_smooth(method = lm) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds_3_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
lm(quality ~ alcohol, data = reds)
lm(logprice ~ I(carat^(1/3)),
data = diamondsBigSample[diamondsBigSample$price < 10000] &
diamondsBigSample$cert == 'GIA')
diamondsBigSample$logprice = log(diamondsBigSample$price)
diamondsBigSample <- load('BigDiamonds.Rda')
diamondsBigSample$logprice = log(diamondsBigSample$price)
lm(logprice ~ I(carat^(1/3)),
data = diamondsBigSample[diamondsBigSample$price < 10000] &
diamondsBigSample$cert == 'GIA')
lm(I(log(price)) ~ I(carat^(1/3)), data = diamondsBigSample)
lm(I(log(price)) ~ I(carat^(1/3)), data = diamondsBigSample)
library('bitops')
library('RCurl')
diamondsurl = getBinaryURL("https://raw.github.com/solomonm/diamonds-data/master/BigDiamonds.Rda")
load(rawConnection(diamondsurl))
diamondsBigSample <- load('BigDiamonds.Rda')
lm(I(log(price)) ~ I(carat^(1/3)), data = diamondsBigSample)
library(memisc)
lm(I(log(price)) ~ I(carat^(1/3)), data = diamonds)
update(m1, ~ . + carat)
m1 <- lm(I(log(price)) ~ I(carat^(1/3)), data = diamonds)
m2 <- update(m1, ~ . + carat)
m3 <- update(m2, ~ . + cut)
m4 <- update(m3, ~ . + color)
m5 <- update(m4, ~ . + clarity)
mtable(m1, m2, m3, m4, m5)
m1 <- lm(I(log(price)) ~ I(carat^(1/3)), data = diamondsBigSample)
m2 <- update(m1, ~ . + carat)
m3 <- update(m2, ~ . + cut)
m4 <- update(m3, ~ . + color)
m5 <- update(m4, ~ . + clarity)
mtable(m1, m2, m3, m4, m5)
lin_mod <- lm(quality ~ alcohol, data = reds)
plot(lin_mod)
plot(lin_mod)
lin_mod <- lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
plot(lin_mod)
lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
lm(quality ~ alcohol:volatile.acidity, data = reds)
lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
lm(quality ~ alcohol + volatile.acidity + sulphates, data = reds)
mtable(m1)
m1 <- lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
m1 <- lm(quality ~ alcohol + volatile.acidity + sulphates, data = reds)
m2 <- lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
mtable(m1,m2)
m1 <- lm(quality ~ alcohol, data = reds)
m2 <- lm(quality ~ alcohol + volatile.acidity + sulphates, data = reds)
m3 <- lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
mtable(m1,m2,m3)
m2 <- update(m1, ~ . + volatile.acidity)
mtable(m1,m2,m3,m4)
m1 <- lm(quality ~ alcohol, data = reds)
m2 <- update(m1, ~ . + volatile.acidity)
m3 <- lm(quality ~ alcohol + volatile.acidity + sulphates, data = reds)
m4 <- lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
mtable(m1,m2,m3,m4)
m1 <- lm(quality ~ alcohol, data = reds)
m2 <- update(m1, ~ . + volatile.acidity)
m3 <- update(m2, ~ . + sulphates)
m4 <- lm(quality ~ alcohol + volatile.acidity + sulphates, data = reds)
m5 <- lm(quality ~ alcohol:volatile.acidity:sulphates, data = reds)
mtable(m1,m2,m3,m4,m5)
m5 <- lm(quality ~ alcohol*volatile.acidity*sulphates, data = reds)
m1 <- lm(quality ~ alcohol, data = reds)
m2 <- update(m1, ~ . + volatile.acidity)
m3 <- update(m2, ~ . + sulphates)
m4 <- lm(quality ~ alcohol + volatile.acidity + sulphates, data = reds)
m5 <- lm(quality ~ alcohol*volatile.acidity*sulphates, data = reds)
mtable(m1,m2,m3,m4,m5)
m1 <- lm(quality ~ alcohol, data = reds)
m2 <- update(m1, ~ . + volatile.acidity)
m3 <- update(m2, ~ . + sulphates)
m4 <- lm(quality ~ alcohol + volatile.acidity + sulphates, data = reds)
m5 <- lm(quality ~ alcohol : volatile.acidity : sulphates, data = reds)
m6 <- lm(quality ~ alcohol * volatile.acidity * sulphates, data = reds)
mtable(m1,m2,m3,m4,m5,m6)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5)
library(ggplot2)
library(reshape2)
library(GGally)
library(grid)
library(gridExtra)
library(dplyr)
library(memisc)
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point(aes(colour = factor(quality)))
##### alcohol vs quality colored by quality
```{r echo=FALSE}
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_point(aes(colour = factor(quality)))
```
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
```{r echo=FALSE}
ggplot(reds, aes(x = volatile.acidity, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
```
##### sulphates vs (jittered) quality colored by quality
```{r echo=FALSE}
ggplot(reds, aes(x = sulphates, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
```
ggplot(reds, aes(x = sulphates, y = quality)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = 'lm', formula = y ~ x, aes(fill = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = lm, formula = y ~ x, aes(fill = factor(quality), colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_jitter(aes(colour = factor(quality))) +
stat_smooth(method = lm, formula = y ~ x, aes(fill = factor(quality), colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
##### alcohol vs volatile.acidity colored by quality with quality smoothing lines
```{r echo=FALSE}
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
```
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds, aes(x = sulphates, y = factor(quality))) +
geom_jitter(aes(colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = sulphates)) +
geom_point(aes(color = factor(quality))) +
facet_grid(. ~ quality)
ggplot(grouped_reds, aes(x = quality, y = alcohol_mean)) +
geom_line()
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(color = factor(quality)))
```{r echo=FALSE}
ggplot(reds, aes(x = quality, y = alcohol)) +
geom_point(alpha = 0.5,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.1,
linetype = 3, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.5,
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.9,
linetype = 3, color = 'blue')
```
ggplot(reds, aes(x = quality, y = alcohol)) +
geom_point(alpha = 0.5,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.1,
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.5,
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.9,
linetype = 2, color = 'blue')
ggplot(reds, aes(x = quality, y = sulphates)) +
geom_point(alpha = 0.5,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.1,
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.5,
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.9,
linetype = 2, color = 'blue')
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(color = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
##### scatterplot alcohol vs. volatile.acidity
```{r echo=FALSE}
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(color = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds_3_4_7_8, aes(x = alcohol, y = sulphates)) +
geom_point(aes(color = factor(quality)))
ggplot(reds_3_4_7_8, aes(x = volatile.acidity, y = sulphates)) +
geom_point(aes(color = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(color = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
geom_point()
```{r echo=FALSE}
ggplot(reds_3_4_7_8, aes(x = alcohol, y = volatile.acidity, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
```
ggplot(reds_3_4_7_8, aes(x = alcohol, y = sulphates)) +
geom_point(aes(color = factor(quality)))
ggplot(reds_3_4_7_8, aes(x = volatile.acidity, y = sulphates)) +
geom_point(aes(color = factor(quality)))
ggplot(reds_3_4_7_8, aes(x = alcohol, y = sulphates)) +
geom_point(aes(color = factor(quality)))
```{r echo=FALSE}
ggplot(reds_3_4_7_8, aes(x = alcohol, y = sulphates)) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point(aes(color = factor(quality)))
```
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(fill = alcohol, size = sulphates, colour = 'black'), alpha=0.7) +
scale_colour_gradient(low = 'blue', high = 'orange') +
facet_grid(. ~ quality)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(fill = alcohol, size = sulphates), alpha=0.7) +
scale_colour_gradient(low = 'blue', high = 'orange') +
facet_grid(. ~ quality)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = alcohol, size = sulphates), alpha=0.7) +
scale_colour_gradient(low = 'blue', high = 'orange') +
facet_grid(. ~ quality)
ggplot(reds_3_8, aes(x = alcohol, y = sulphates, colour = factor(quality))) +
stat_smooth(method = lm, aes(fill = factor(quality))) +
geom_point()
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d() +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7) +
geom_density2d()
ggplot(reds, aes(x = alcohol, y = volatile.acidity, size = sulphates)) +
geom_point(aes(colour = factor(quality)), alpha = 0.7) +
geom_density2d()
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7) +
geom_density2d()
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7) +
geom_density2d(show_guide=FALSE)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d(aes(colour = factor(quality)))
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7) +
geom_density2d(aes(colour = factor(quality)), show_guide=FALSE)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5)
tester = data.frame(alcohol = 14.9,
volatile.acidity = 0.12,
sulphates = 0.65)
predict(m6, newdata = tester, interval="prediction", level = .95)
View(reds)
fake_red = data.frame(alcohol = max(reds$alcohol),
volatile.acidity = min(reds$volatile.acidity),
sulphates = mean(reds$sulphates))
predict(m6, newdata = fake_red, interval="prediction", level = .95)
View(reds)
reds[1,]
reds[1,]$volatile.acidity
first_red = data.frame(alcohol = reds[1,]$alcohol,
volatile.acidity = reds[1,]$volatile.acidity,
sulphates = reds[1,]$sulphates)
predict(m6, newdata = first_red, interval="prediction", level = .95)
fake_good_red = data.frame(alcohol = max(reds$alcohol),
volatile.acidity = min(reds$volatile.acidity),
sulphates = mean(reds$sulphates))
predict(m6, newdata = fake_good_red, interval="prediction", level = .95)
fake_good_red = data.frame(alcohol = max(reds$alcohol),
volatile.acidity = min(reds$volatile.acidity),
sulphates = median(reds$sulphates))
predict(m6, newdata = fake_good_red, interval="prediction", level = .95)
fake_bad_red = data.frame(alcohol = min(reds$alcohol),
volatile.acidity = max(reds$volatile.acidity),
sulphates = min(reds$sulphates))
predict(m6, newdata = fake_bad_red, interval="prediction", level = .95)
fake_good_red = data.frame(alcohol = max(reds$alcohol),
volatile.acidity = min(reds$volatile.acidity),
sulphates = median(reds$sulphates))
predict(m6, newdata = fake_good_red, interval="prediction", level = .99)
fake_bad_red = data.frame(alcohol = min(reds$alcohol),
volatile.acidity = max(reds$volatile.acidity),
sulphates = min(reds$sulphates))
predict(m6, newdata = fake_bad_red, interval="prediction", level = .99)
fake_bad_red = data.frame(alcohol = min(reds$alcohol),
volatile.acidity = max(reds$volatile.acidity),
sulphates = min(reds$sulphates))
predict(m6, newdata = fake_bad_red, interval="prediction", level = .95)
first_red = data.frame(alcohol = reds[1,]$alcohol,
volatile.acidity = reds[1,]$volatile.acidity,
sulphates = reds[1,]$sulphates)
predict(m6, newdata = first_red, interval="prediction", level = .95)
first_red = data.frame(alcohol = reds[1,]$alcohol,
volatile.acidity = reds[1,]$volatile.acidity,
sulphates = reds[1,]$sulphates)
predict(m6, newdata = first_red, interval="prediction", level = .95)
fake_mid_red = data.frame(alcohol = median(reds$alcohol),
volatile.acidity = median(reds$volatile.acidity),
sulphates = median(reds$sulphates))
predict(m6, newdata = fake_mid_red, interval="prediction", level = .95)
ggplot(reds, aes(x = quality, y = alcohol)) +
geom_point(alpha = 0.7,
position = position_jitter(h = 0),
aes(colour = volatile.acidity,
size = sulphates)) +
scale_colour_gradient(low = 'blue', high = 'yellow') +
stat_smooth(method = 'lm', colour = 'green')
ggplot(reds, aes(x = alcohol, y = quality)) +
geom_point(alpha = 0.7,
position = position_jitter(h = 0),
aes(colour = volatile.acidity,
size = sulphates)) +
scale_colour_gradient(low = 'blue', high = 'yellow') +
stat_smooth(method = 'lm', colour = 'green')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5) +
ggtitle('Alc vs Vol.Acid with Qual Clusters')
ggplot(reds, aes(x = quality, y = alcohol)) +
geom_point(alpha = 0.7,
position = position_jitter(h = 0),
aes(colour = volatile.acidity,
size = sulphates)) +
scale_colour_gradient(low = 'blue', high = 'yellow') +
stat_smooth(method = 'lm', colour = 'green') +
ggtitle('Qual vs Alc, Vol.Acid Colors, and Sulph Sizes')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = alcohol, size = sulphates), alpha=0.7) +
scale_colour_gradient(low = 'blue', high = 'orange') +
facet_grid(. ~ quality) +
ggtitle('Alc vs Vol.Acid, Alc Colors, and Sulph Sizes')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = alcohol, size = sulphates), alpha=0.7) +
scale_colour_gradient(low = 'blue', high = 'orange') +
facet_grid(. ~ quality) +
ggtitle('Alc vs Vol.Acid by Quality Score')
ggplot(reds, aes(x = quality, y = alcohol)) +
geom_point(alpha = 0.7,
position = position_jitter(h = 0),
aes(colour = volatile.acidity,
size = sulphates)) +
scale_colour_gradient(low = 'blue', high = 'yellow') +
stat_smooth(method = 'lm', colour = 'green') +
ggtitle('Qual vs Alc, Vol.Acid Colors, and Sulph Sizes')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = alcohol, size = sulphates), alpha=0.7) +
scale_colour_gradient(low = 'blue', high = 'orange') +
facet_grid(. ~ quality) +
ggtitle('Alcohol vs Volatile.Acidity by Quality Score')
ggplot(reds, aes(x = quality, y = alcohol)) +
geom_point(alpha = 0.7,
position = position_jitter(h = 0),
aes(colour = volatile.acidity,
size = sulphates)) +
scale_colour_gradient(low = 'blue', high = 'yellow') +
stat_smooth(method = 'lm', colour = 'green') +
ggtitle('Qual vs Alc, Vol.Acid Colors, and Sulph Sizes')
ggplot(reds, aes(x = quality, y = alcohol)) +
geom_point(alpha = 0.7,
position = position_jitter(h = 0),
aes(colour = volatile.acidity,
size = sulphates)) +
scale_colour_gradient(low = 'blue', high = 'yellow') +
stat_smooth(method = 'lm', colour = 'green') +
ggtitle('Quality vs Alcohol')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5) +
ggtitle('Alc vs Vol.Acid with Qual Clusters')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5) +
ggtitle('Alcohol vs Volatile.Acidity -> Quality Clusters')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
stat_density2d(aes(fill = factor(quality)), geom = 'polygon', alpha = 0.5) +
ggtitle('Alcohol vs Volatile.Acidity : Quality Clusters')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7, type='seq')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7) +
scale_colour_brewer(type = 'seq')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_point(aes(colour = factor(quality), size = sulphates), alpha = 0.7)
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d(aes(colour = factor(quality))) +
scale_colour_brewer(type = 'seq')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d(aes(colour = factor(quality))) +
scale_colour_brewer(type = 'seq', low='red')
ggplot(reds, aes(x = alcohol, y = volatile.acidity)) +
geom_density2d(aes(colour = factor(quality)))
